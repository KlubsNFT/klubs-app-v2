/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IArtStoreInterface extends ethers.utils.Interface {
  functions: {
    "onAuctionsCount()": FunctionFragment;
    "userAuctionInfoLength(address)": FunctionFragment;
    "biddings(uint256,uint256)": FunctionFragment;
    "userAuctionInfo(address,uint256)": FunctionFragment;
    "checkAuction(uint256)": FunctionFragment;
    "onSalesCount()": FunctionFragment;
    "bid(uint256,uint256,uint256)": FunctionFragment;
    "claim(uint256)": FunctionFragment;
    "userBiddingInfoLength(address)": FunctionFragment;
    "userOfferInfo(address,uint256)": FunctionFragment;
    "checkSelling(uint256)": FunctionFragment;
    "offers(uint256,uint256)": FunctionFragment;
    "biddingCount(uint256)": FunctionFragment;
    "auctions(uint256)": FunctionFragment;
    "userSellInfoLength(address)": FunctionFragment;
    "offerCount(uint256)": FunctionFragment;
    "acceptOffer(uint256,uint256)": FunctionFragment;
    "changeSellPrice(uint256[],uint256[])": FunctionFragment;
    "cancelAuction(uint256)": FunctionFragment;
    "userOfferInfoLength(address)": FunctionFragment;
    "onAuctions(uint256)": FunctionFragment;
    "auctionExtensionInterval()": FunctionFragment;
    "userSellInfo(address,uint256)": FunctionFragment;
    "sales(uint256)": FunctionFragment;
    "batchTransfer(uint256[],address[])": FunctionFragment;
    "createAuction(uint256,uint256,uint256)": FunctionFragment;
    "sell(uint256[],uint256[])": FunctionFragment;
    "cancelOffer(uint256,uint256)": FunctionFragment;
    "cancelSale(uint256[])": FunctionFragment;
    "userBiddingInfo(address,uint256)": FunctionFragment;
    "onSales(uint256)": FunctionFragment;
    "makeOffer(uint256,uint256,uint256)": FunctionFragment;
    "buy(uint256[],uint256[],uint256[])": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "onAuctionsCount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "userAuctionInfoLength",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "biddings",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "userAuctionInfo",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "checkAuction",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "onSalesCount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "bid",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "claim", values: [BigNumberish]): string;
  encodeFunctionData(
    functionFragment: "userBiddingInfoLength",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "userOfferInfo",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "checkSelling",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "offers",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "biddingCount",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "auctions",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "userSellInfoLength",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "offerCount",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "acceptOffer",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "changeSellPrice",
    values: [BigNumberish[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "cancelAuction",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "userOfferInfoLength",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "onAuctions",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "auctionExtensionInterval",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "userSellInfo",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "sales", values: [BigNumberish]): string;
  encodeFunctionData(
    functionFragment: "batchTransfer",
    values: [BigNumberish[], string[]]
  ): string;
  encodeFunctionData(
    functionFragment: "createAuction",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "sell",
    values: [BigNumberish[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "cancelOffer",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "cancelSale",
    values: [BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "userBiddingInfo",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "onSales",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "makeOffer",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "buy",
    values: [BigNumberish[], BigNumberish[], BigNumberish[]]
  ): string;

  decodeFunctionResult(
    functionFragment: "onAuctionsCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "userAuctionInfoLength",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "biddings", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "userAuctionInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "checkAuction",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onSalesCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "bid", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "claim", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "userBiddingInfoLength",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "userOfferInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "checkSelling",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "offers", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "biddingCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "auctions", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "userSellInfoLength",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "offerCount", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "acceptOffer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "changeSellPrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "cancelAuction",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "userOfferInfoLength",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "onAuctions", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "auctionExtensionInterval",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "userSellInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "sales", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "batchTransfer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createAuction",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "sell", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "cancelOffer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "cancelSale", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "userBiddingInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "onSales", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "makeOffer", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "buy", data: BytesLike): Result;

  events: {
    "Sell(uint256,address,uint256)": EventFragment;
    "ChangeSellPrice(uint256,address,uint256)": EventFragment;
    "Buy(uint256,address,uint256)": EventFragment;
    "CancelSale(uint256,address)": EventFragment;
    "MakeOffer(uint256,uint256,address,uint256)": EventFragment;
    "CancelOffer(uint256,uint256,address)": EventFragment;
    "AcceptOffer(uint256,uint256,address)": EventFragment;
    "CreateAuction(uint256,address,uint256,uint256)": EventFragment;
    "CancelAuction(uint256,address)": EventFragment;
    "Bid(uint256,address,uint256)": EventFragment;
    "Claim(uint256,address,uint256)": EventFragment;
    "CancelSaleByOwner(uint256)": EventFragment;
    "CancelOfferByOwner(uint256,uint256)": EventFragment;
    "CancelAuctionByOwner(uint256)": EventFragment;
    "Ban(address)": EventFragment;
    "Unban(address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Sell"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ChangeSellPrice"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Buy"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "CancelSale"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "MakeOffer"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "CancelOffer"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AcceptOffer"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "CreateAuction"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "CancelAuction"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Bid"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Claim"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "CancelSaleByOwner"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "CancelOfferByOwner"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "CancelAuctionByOwner"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Ban"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Unban"): EventFragment;
}

export class IArtStore extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IArtStoreInterface;

  functions: {
    onAuctionsCount(overrides?: CallOverrides): Promise<[BigNumber]>;

    "onAuctionsCount()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    userAuctionInfoLength(
      seller: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "userAuctionInfoLength(address)"(
      seller: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    biddings(
      id: BigNumberish,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, BigNumber] & {
        bidder: string;
        price: BigNumber;
        mileage: BigNumber;
      }
    >;

    "biddings(uint256,uint256)"(
      id: BigNumberish,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, BigNumber] & {
        bidder: string;
        price: BigNumber;
        mileage: BigNumber;
      }
    >;

    userAuctionInfo(
      seller: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { id: BigNumber; startPrice: BigNumber }
    >;

    "userAuctionInfo(address,uint256)"(
      seller: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { id: BigNumber; startPrice: BigNumber }
    >;

    checkAuction(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "checkAuction(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    onSalesCount(overrides?: CallOverrides): Promise<[BigNumber]>;

    "onSalesCount()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    bid(
      id: BigNumberish,
      price: BigNumberish,
      mileage: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "bid(uint256,uint256,uint256)"(
      id: BigNumberish,
      price: BigNumberish,
      mileage: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    claim(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "claim(uint256)"(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    userBiddingInfoLength(
      bidder: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "userBiddingInfoLength(address)"(
      bidder: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    userOfferInfo(
      offeror: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber] & { id: BigNumber; price: BigNumber }>;

    "userOfferInfo(address,uint256)"(
      offeror: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber] & { id: BigNumber; price: BigNumber }>;

    checkSelling(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "checkSelling(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    offers(
      id: BigNumberish,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, BigNumber] & {
        offeror: string;
        price: BigNumber;
        mileage: BigNumber;
      }
    >;

    "offers(uint256,uint256)"(
      id: BigNumberish,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, BigNumber] & {
        offeror: string;
        price: BigNumber;
        mileage: BigNumber;
      }
    >;

    biddingCount(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "biddingCount(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    auctions(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, BigNumber] & {
        seller: string;
        startPrice: BigNumber;
        endBlock: BigNumber;
      }
    >;

    "auctions(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, BigNumber] & {
        seller: string;
        startPrice: BigNumber;
        endBlock: BigNumber;
      }
    >;

    userSellInfoLength(
      seller: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "userSellInfoLength(address)"(
      seller: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    offerCount(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "offerCount(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    acceptOffer(
      id: BigNumberish,
      offerId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "acceptOffer(uint256,uint256)"(
      id: BigNumberish,
      offerId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    changeSellPrice(
      ids: BigNumberish[],
      prices: BigNumberish[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "changeSellPrice(uint256[],uint256[])"(
      ids: BigNumberish[],
      prices: BigNumberish[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    cancelAuction(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "cancelAuction(uint256)"(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    userOfferInfoLength(
      offeror: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "userOfferInfoLength(address)"(
      offeror: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    onAuctions(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "onAuctions(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    auctionExtensionInterval(overrides?: CallOverrides): Promise<[BigNumber]>;

    "auctionExtensionInterval()"(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    userSellInfo(
      seller: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber] & { id: BigNumber; price: BigNumber }>;

    "userSellInfo(address,uint256)"(
      seller: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber] & { id: BigNumber; price: BigNumber }>;

    sales(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber] & { seller: string; price: BigNumber }>;

    "sales(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber] & { seller: string; price: BigNumber }>;

    batchTransfer(
      ids: BigNumberish[],
      to: string[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "batchTransfer(uint256[],address[])"(
      ids: BigNumberish[],
      to: string[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    createAuction(
      id: BigNumberish,
      startPrice: BigNumberish,
      endBlock: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "createAuction(uint256,uint256,uint256)"(
      id: BigNumberish,
      startPrice: BigNumberish,
      endBlock: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    sell(
      ids: BigNumberish[],
      prices: BigNumberish[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "sell(uint256[],uint256[])"(
      ids: BigNumberish[],
      prices: BigNumberish[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    cancelOffer(
      id: BigNumberish,
      offerId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "cancelOffer(uint256,uint256)"(
      id: BigNumberish,
      offerId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    cancelSale(
      ids: BigNumberish[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "cancelSale(uint256[])"(
      ids: BigNumberish[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    userBiddingInfo(
      bidder: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber] & { id: BigNumber; price: BigNumber }>;

    "userBiddingInfo(address,uint256)"(
      bidder: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber] & { id: BigNumber; price: BigNumber }>;

    onSales(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "onSales(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    makeOffer(
      id: BigNumberish,
      price: BigNumberish,
      mileage: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "makeOffer(uint256,uint256,uint256)"(
      id: BigNumberish,
      price: BigNumberish,
      mileage: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    buy(
      ids: BigNumberish[],
      prices: BigNumberish[],
      mileages: BigNumberish[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "buy(uint256[],uint256[],uint256[])"(
      ids: BigNumberish[],
      prices: BigNumberish[],
      mileages: BigNumberish[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  onAuctionsCount(overrides?: CallOverrides): Promise<BigNumber>;

  "onAuctionsCount()"(overrides?: CallOverrides): Promise<BigNumber>;

  userAuctionInfoLength(
    seller: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "userAuctionInfoLength(address)"(
    seller: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  biddings(
    id: BigNumberish,
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [string, BigNumber, BigNumber] & {
      bidder: string;
      price: BigNumber;
      mileage: BigNumber;
    }
  >;

  "biddings(uint256,uint256)"(
    id: BigNumberish,
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [string, BigNumber, BigNumber] & {
      bidder: string;
      price: BigNumber;
      mileage: BigNumber;
    }
  >;

  userAuctionInfo(
    seller: string,
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber] & { id: BigNumber; startPrice: BigNumber }>;

  "userAuctionInfo(address,uint256)"(
    seller: string,
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber] & { id: BigNumber; startPrice: BigNumber }>;

  checkAuction(id: BigNumberish, overrides?: CallOverrides): Promise<boolean>;

  "checkAuction(uint256)"(
    id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  onSalesCount(overrides?: CallOverrides): Promise<BigNumber>;

  "onSalesCount()"(overrides?: CallOverrides): Promise<BigNumber>;

  bid(
    id: BigNumberish,
    price: BigNumberish,
    mileage: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "bid(uint256,uint256,uint256)"(
    id: BigNumberish,
    price: BigNumberish,
    mileage: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  claim(id: BigNumberish, overrides?: Overrides): Promise<ContractTransaction>;

  "claim(uint256)"(
    id: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  userBiddingInfoLength(
    bidder: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "userBiddingInfoLength(address)"(
    bidder: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  userOfferInfo(
    offeror: string,
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber] & { id: BigNumber; price: BigNumber }>;

  "userOfferInfo(address,uint256)"(
    offeror: string,
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber] & { id: BigNumber; price: BigNumber }>;

  checkSelling(id: BigNumberish, overrides?: CallOverrides): Promise<boolean>;

  "checkSelling(uint256)"(
    id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  offers(
    id: BigNumberish,
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [string, BigNumber, BigNumber] & {
      offeror: string;
      price: BigNumber;
      mileage: BigNumber;
    }
  >;

  "offers(uint256,uint256)"(
    id: BigNumberish,
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [string, BigNumber, BigNumber] & {
      offeror: string;
      price: BigNumber;
      mileage: BigNumber;
    }
  >;

  biddingCount(id: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

  "biddingCount(uint256)"(
    id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  auctions(
    id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [string, BigNumber, BigNumber] & {
      seller: string;
      startPrice: BigNumber;
      endBlock: BigNumber;
    }
  >;

  "auctions(uint256)"(
    id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [string, BigNumber, BigNumber] & {
      seller: string;
      startPrice: BigNumber;
      endBlock: BigNumber;
    }
  >;

  userSellInfoLength(
    seller: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "userSellInfoLength(address)"(
    seller: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  offerCount(id: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

  "offerCount(uint256)"(
    id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  acceptOffer(
    id: BigNumberish,
    offerId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "acceptOffer(uint256,uint256)"(
    id: BigNumberish,
    offerId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  changeSellPrice(
    ids: BigNumberish[],
    prices: BigNumberish[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "changeSellPrice(uint256[],uint256[])"(
    ids: BigNumberish[],
    prices: BigNumberish[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  cancelAuction(
    id: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "cancelAuction(uint256)"(
    id: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  userOfferInfoLength(
    offeror: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "userOfferInfoLength(address)"(
    offeror: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  onAuctions(
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "onAuctions(uint256)"(
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  auctionExtensionInterval(overrides?: CallOverrides): Promise<BigNumber>;

  "auctionExtensionInterval()"(overrides?: CallOverrides): Promise<BigNumber>;

  userSellInfo(
    seller: string,
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber] & { id: BigNumber; price: BigNumber }>;

  "userSellInfo(address,uint256)"(
    seller: string,
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber] & { id: BigNumber; price: BigNumber }>;

  sales(
    id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[string, BigNumber] & { seller: string; price: BigNumber }>;

  "sales(uint256)"(
    id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[string, BigNumber] & { seller: string; price: BigNumber }>;

  batchTransfer(
    ids: BigNumberish[],
    to: string[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "batchTransfer(uint256[],address[])"(
    ids: BigNumberish[],
    to: string[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  createAuction(
    id: BigNumberish,
    startPrice: BigNumberish,
    endBlock: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "createAuction(uint256,uint256,uint256)"(
    id: BigNumberish,
    startPrice: BigNumberish,
    endBlock: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  sell(
    ids: BigNumberish[],
    prices: BigNumberish[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "sell(uint256[],uint256[])"(
    ids: BigNumberish[],
    prices: BigNumberish[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  cancelOffer(
    id: BigNumberish,
    offerId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "cancelOffer(uint256,uint256)"(
    id: BigNumberish,
    offerId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  cancelSale(
    ids: BigNumberish[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "cancelSale(uint256[])"(
    ids: BigNumberish[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  userBiddingInfo(
    bidder: string,
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber] & { id: BigNumber; price: BigNumber }>;

  "userBiddingInfo(address,uint256)"(
    bidder: string,
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber] & { id: BigNumber; price: BigNumber }>;

  onSales(index: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

  "onSales(uint256)"(
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  makeOffer(
    id: BigNumberish,
    price: BigNumberish,
    mileage: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "makeOffer(uint256,uint256,uint256)"(
    id: BigNumberish,
    price: BigNumberish,
    mileage: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  buy(
    ids: BigNumberish[],
    prices: BigNumberish[],
    mileages: BigNumberish[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "buy(uint256[],uint256[],uint256[])"(
    ids: BigNumberish[],
    prices: BigNumberish[],
    mileages: BigNumberish[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    onAuctionsCount(overrides?: CallOverrides): Promise<BigNumber>;

    "onAuctionsCount()"(overrides?: CallOverrides): Promise<BigNumber>;

    userAuctionInfoLength(
      seller: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "userAuctionInfoLength(address)"(
      seller: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    biddings(
      id: BigNumberish,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, BigNumber] & {
        bidder: string;
        price: BigNumber;
        mileage: BigNumber;
      }
    >;

    "biddings(uint256,uint256)"(
      id: BigNumberish,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, BigNumber] & {
        bidder: string;
        price: BigNumber;
        mileage: BigNumber;
      }
    >;

    userAuctionInfo(
      seller: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { id: BigNumber; startPrice: BigNumber }
    >;

    "userAuctionInfo(address,uint256)"(
      seller: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { id: BigNumber; startPrice: BigNumber }
    >;

    checkAuction(id: BigNumberish, overrides?: CallOverrides): Promise<boolean>;

    "checkAuction(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    onSalesCount(overrides?: CallOverrides): Promise<BigNumber>;

    "onSalesCount()"(overrides?: CallOverrides): Promise<BigNumber>;

    bid(
      id: BigNumberish,
      price: BigNumberish,
      mileage: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "bid(uint256,uint256,uint256)"(
      id: BigNumberish,
      price: BigNumberish,
      mileage: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    claim(id: BigNumberish, overrides?: CallOverrides): Promise<void>;

    "claim(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    userBiddingInfoLength(
      bidder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "userBiddingInfoLength(address)"(
      bidder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    userOfferInfo(
      offeror: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber] & { id: BigNumber; price: BigNumber }>;

    "userOfferInfo(address,uint256)"(
      offeror: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber] & { id: BigNumber; price: BigNumber }>;

    checkSelling(id: BigNumberish, overrides?: CallOverrides): Promise<boolean>;

    "checkSelling(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    offers(
      id: BigNumberish,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, BigNumber] & {
        offeror: string;
        price: BigNumber;
        mileage: BigNumber;
      }
    >;

    "offers(uint256,uint256)"(
      id: BigNumberish,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, BigNumber] & {
        offeror: string;
        price: BigNumber;
        mileage: BigNumber;
      }
    >;

    biddingCount(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "biddingCount(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    auctions(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, BigNumber] & {
        seller: string;
        startPrice: BigNumber;
        endBlock: BigNumber;
      }
    >;

    "auctions(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, BigNumber] & {
        seller: string;
        startPrice: BigNumber;
        endBlock: BigNumber;
      }
    >;

    userSellInfoLength(
      seller: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "userSellInfoLength(address)"(
      seller: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    offerCount(id: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    "offerCount(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    acceptOffer(
      id: BigNumberish,
      offerId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "acceptOffer(uint256,uint256)"(
      id: BigNumberish,
      offerId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    changeSellPrice(
      ids: BigNumberish[],
      prices: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    "changeSellPrice(uint256[],uint256[])"(
      ids: BigNumberish[],
      prices: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    cancelAuction(id: BigNumberish, overrides?: CallOverrides): Promise<void>;

    "cancelAuction(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    userOfferInfoLength(
      offeror: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "userOfferInfoLength(address)"(
      offeror: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    onAuctions(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "onAuctions(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    auctionExtensionInterval(overrides?: CallOverrides): Promise<BigNumber>;

    "auctionExtensionInterval()"(overrides?: CallOverrides): Promise<BigNumber>;

    userSellInfo(
      seller: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber] & { id: BigNumber; price: BigNumber }>;

    "userSellInfo(address,uint256)"(
      seller: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber] & { id: BigNumber; price: BigNumber }>;

    sales(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber] & { seller: string; price: BigNumber }>;

    "sales(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber] & { seller: string; price: BigNumber }>;

    batchTransfer(
      ids: BigNumberish[],
      to: string[],
      overrides?: CallOverrides
    ): Promise<void>;

    "batchTransfer(uint256[],address[])"(
      ids: BigNumberish[],
      to: string[],
      overrides?: CallOverrides
    ): Promise<void>;

    createAuction(
      id: BigNumberish,
      startPrice: BigNumberish,
      endBlock: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "createAuction(uint256,uint256,uint256)"(
      id: BigNumberish,
      startPrice: BigNumberish,
      endBlock: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    sell(
      ids: BigNumberish[],
      prices: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    "sell(uint256[],uint256[])"(
      ids: BigNumberish[],
      prices: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    cancelOffer(
      id: BigNumberish,
      offerId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "cancelOffer(uint256,uint256)"(
      id: BigNumberish,
      offerId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    cancelSale(ids: BigNumberish[], overrides?: CallOverrides): Promise<void>;

    "cancelSale(uint256[])"(
      ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    userBiddingInfo(
      bidder: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber] & { id: BigNumber; price: BigNumber }>;

    "userBiddingInfo(address,uint256)"(
      bidder: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber] & { id: BigNumber; price: BigNumber }>;

    onSales(index: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    "onSales(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    makeOffer(
      id: BigNumberish,
      price: BigNumberish,
      mileage: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "makeOffer(uint256,uint256,uint256)"(
      id: BigNumberish,
      price: BigNumberish,
      mileage: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    buy(
      ids: BigNumberish[],
      prices: BigNumberish[],
      mileages: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    "buy(uint256[],uint256[],uint256[])"(
      ids: BigNumberish[],
      prices: BigNumberish[],
      mileages: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    Sell(
      id: BigNumberish | null,
      owner: string | null,
      price: null
    ): EventFilter;

    ChangeSellPrice(
      id: BigNumberish | null,
      owner: string | null,
      price: null
    ): EventFilter;

    Buy(
      id: BigNumberish | null,
      buyer: string | null,
      price: null
    ): EventFilter;

    CancelSale(id: BigNumberish | null, owner: string | null): EventFilter;

    MakeOffer(
      id: BigNumberish | null,
      offerId: BigNumberish | null,
      offeror: null,
      price: null
    ): EventFilter;

    CancelOffer(
      id: BigNumberish | null,
      offerId: BigNumberish | null,
      offeror: null
    ): EventFilter;

    AcceptOffer(
      id: BigNumberish | null,
      offerId: BigNumberish | null,
      acceptor: null
    ): EventFilter;

    CreateAuction(
      id: BigNumberish | null,
      owner: string | null,
      startPrice: null,
      endBlock: null
    ): EventFilter;

    CancelAuction(id: BigNumberish | null, owner: string | null): EventFilter;

    Bid(
      id: BigNumberish | null,
      bidder: string | null,
      price: null
    ): EventFilter;

    Claim(
      id: BigNumberish | null,
      bidder: string | null,
      price: null
    ): EventFilter;

    CancelSaleByOwner(id: BigNumberish | null): EventFilter;

    CancelOfferByOwner(
      id: BigNumberish | null,
      offerId: BigNumberish | null
    ): EventFilter;

    CancelAuctionByOwner(id: BigNumberish | null): EventFilter;

    Ban(user: string | null): EventFilter;

    Unban(user: string | null): EventFilter;
  };

  estimateGas: {
    onAuctionsCount(overrides?: CallOverrides): Promise<BigNumber>;

    "onAuctionsCount()"(overrides?: CallOverrides): Promise<BigNumber>;

    userAuctionInfoLength(
      seller: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "userAuctionInfoLength(address)"(
      seller: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    biddings(
      id: BigNumberish,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "biddings(uint256,uint256)"(
      id: BigNumberish,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    userAuctionInfo(
      seller: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "userAuctionInfo(address,uint256)"(
      seller: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    checkAuction(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "checkAuction(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    onSalesCount(overrides?: CallOverrides): Promise<BigNumber>;

    "onSalesCount()"(overrides?: CallOverrides): Promise<BigNumber>;

    bid(
      id: BigNumberish,
      price: BigNumberish,
      mileage: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "bid(uint256,uint256,uint256)"(
      id: BigNumberish,
      price: BigNumberish,
      mileage: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    claim(id: BigNumberish, overrides?: Overrides): Promise<BigNumber>;

    "claim(uint256)"(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    userBiddingInfoLength(
      bidder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "userBiddingInfoLength(address)"(
      bidder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    userOfferInfo(
      offeror: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "userOfferInfo(address,uint256)"(
      offeror: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    checkSelling(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "checkSelling(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    offers(
      id: BigNumberish,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "offers(uint256,uint256)"(
      id: BigNumberish,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    biddingCount(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "biddingCount(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    auctions(id: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    "auctions(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    userSellInfoLength(
      seller: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "userSellInfoLength(address)"(
      seller: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    offerCount(id: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    "offerCount(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    acceptOffer(
      id: BigNumberish,
      offerId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "acceptOffer(uint256,uint256)"(
      id: BigNumberish,
      offerId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    changeSellPrice(
      ids: BigNumberish[],
      prices: BigNumberish[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "changeSellPrice(uint256[],uint256[])"(
      ids: BigNumberish[],
      prices: BigNumberish[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    cancelAuction(id: BigNumberish, overrides?: Overrides): Promise<BigNumber>;

    "cancelAuction(uint256)"(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    userOfferInfoLength(
      offeror: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "userOfferInfoLength(address)"(
      offeror: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    onAuctions(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "onAuctions(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    auctionExtensionInterval(overrides?: CallOverrides): Promise<BigNumber>;

    "auctionExtensionInterval()"(overrides?: CallOverrides): Promise<BigNumber>;

    userSellInfo(
      seller: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "userSellInfo(address,uint256)"(
      seller: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    sales(id: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    "sales(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    batchTransfer(
      ids: BigNumberish[],
      to: string[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "batchTransfer(uint256[],address[])"(
      ids: BigNumberish[],
      to: string[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    createAuction(
      id: BigNumberish,
      startPrice: BigNumberish,
      endBlock: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "createAuction(uint256,uint256,uint256)"(
      id: BigNumberish,
      startPrice: BigNumberish,
      endBlock: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    sell(
      ids: BigNumberish[],
      prices: BigNumberish[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "sell(uint256[],uint256[])"(
      ids: BigNumberish[],
      prices: BigNumberish[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    cancelOffer(
      id: BigNumberish,
      offerId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "cancelOffer(uint256,uint256)"(
      id: BigNumberish,
      offerId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    cancelSale(ids: BigNumberish[], overrides?: Overrides): Promise<BigNumber>;

    "cancelSale(uint256[])"(
      ids: BigNumberish[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    userBiddingInfo(
      bidder: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "userBiddingInfo(address,uint256)"(
      bidder: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    onSales(index: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    "onSales(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    makeOffer(
      id: BigNumberish,
      price: BigNumberish,
      mileage: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "makeOffer(uint256,uint256,uint256)"(
      id: BigNumberish,
      price: BigNumberish,
      mileage: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    buy(
      ids: BigNumberish[],
      prices: BigNumberish[],
      mileages: BigNumberish[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "buy(uint256[],uint256[],uint256[])"(
      ids: BigNumberish[],
      prices: BigNumberish[],
      mileages: BigNumberish[],
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    onAuctionsCount(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "onAuctionsCount()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    userAuctionInfoLength(
      seller: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "userAuctionInfoLength(address)"(
      seller: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    biddings(
      id: BigNumberish,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "biddings(uint256,uint256)"(
      id: BigNumberish,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    userAuctionInfo(
      seller: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "userAuctionInfo(address,uint256)"(
      seller: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    checkAuction(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "checkAuction(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    onSalesCount(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "onSalesCount()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    bid(
      id: BigNumberish,
      price: BigNumberish,
      mileage: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "bid(uint256,uint256,uint256)"(
      id: BigNumberish,
      price: BigNumberish,
      mileage: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    claim(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "claim(uint256)"(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    userBiddingInfoLength(
      bidder: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "userBiddingInfoLength(address)"(
      bidder: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    userOfferInfo(
      offeror: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "userOfferInfo(address,uint256)"(
      offeror: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    checkSelling(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "checkSelling(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    offers(
      id: BigNumberish,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "offers(uint256,uint256)"(
      id: BigNumberish,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    biddingCount(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "biddingCount(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    auctions(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "auctions(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    userSellInfoLength(
      seller: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "userSellInfoLength(address)"(
      seller: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    offerCount(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "offerCount(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    acceptOffer(
      id: BigNumberish,
      offerId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "acceptOffer(uint256,uint256)"(
      id: BigNumberish,
      offerId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    changeSellPrice(
      ids: BigNumberish[],
      prices: BigNumberish[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "changeSellPrice(uint256[],uint256[])"(
      ids: BigNumberish[],
      prices: BigNumberish[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    cancelAuction(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "cancelAuction(uint256)"(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    userOfferInfoLength(
      offeror: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "userOfferInfoLength(address)"(
      offeror: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    onAuctions(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "onAuctions(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    auctionExtensionInterval(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "auctionExtensionInterval()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    userSellInfo(
      seller: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "userSellInfo(address,uint256)"(
      seller: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    sales(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "sales(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    batchTransfer(
      ids: BigNumberish[],
      to: string[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "batchTransfer(uint256[],address[])"(
      ids: BigNumberish[],
      to: string[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    createAuction(
      id: BigNumberish,
      startPrice: BigNumberish,
      endBlock: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "createAuction(uint256,uint256,uint256)"(
      id: BigNumberish,
      startPrice: BigNumberish,
      endBlock: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    sell(
      ids: BigNumberish[],
      prices: BigNumberish[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "sell(uint256[],uint256[])"(
      ids: BigNumberish[],
      prices: BigNumberish[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    cancelOffer(
      id: BigNumberish,
      offerId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "cancelOffer(uint256,uint256)"(
      id: BigNumberish,
      offerId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    cancelSale(
      ids: BigNumberish[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "cancelSale(uint256[])"(
      ids: BigNumberish[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    userBiddingInfo(
      bidder: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "userBiddingInfo(address,uint256)"(
      bidder: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    onSales(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "onSales(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    makeOffer(
      id: BigNumberish,
      price: BigNumberish,
      mileage: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "makeOffer(uint256,uint256,uint256)"(
      id: BigNumberish,
      price: BigNumberish,
      mileage: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    buy(
      ids: BigNumberish[],
      prices: BigNumberish[],
      mileages: BigNumberish[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "buy(uint256[],uint256[],uint256[])"(
      ids: BigNumberish[],
      prices: BigNumberish[],
      mileages: BigNumberish[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
