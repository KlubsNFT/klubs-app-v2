/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IPFPProposalHiderInterface extends ethers.utils.Interface {
  functions: {
    "hiding(uint256)": FunctionFragment;
    "show(uint256)": FunctionFragment;
    "hide(uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "hiding",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "show", values: [BigNumberish]): string;
  encodeFunctionData(functionFragment: "hide", values: [BigNumberish]): string;

  decodeFunctionResult(functionFragment: "hiding", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "show", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "hide", data: BytesLike): Result;

  events: {
    "Hide(uint256)": EventFragment;
    "Show(uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Hide"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Show"): EventFragment;
}

export class IPFPProposalHider extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IPFPProposalHiderInterface;

  functions: {
    hiding(
      proposalId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "hiding(uint256)"(
      proposalId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    show(
      proposalId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "show(uint256)"(
      proposalId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    hide(
      proposalId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "hide(uint256)"(
      proposalId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  hiding(proposalId: BigNumberish, overrides?: CallOverrides): Promise<boolean>;

  "hiding(uint256)"(
    proposalId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  show(
    proposalId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "show(uint256)"(
    proposalId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  hide(
    proposalId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "hide(uint256)"(
    proposalId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    hiding(
      proposalId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "hiding(uint256)"(
      proposalId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    show(proposalId: BigNumberish, overrides?: CallOverrides): Promise<void>;

    "show(uint256)"(
      proposalId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    hide(proposalId: BigNumberish, overrides?: CallOverrides): Promise<void>;

    "hide(uint256)"(
      proposalId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    Hide(proposalId: BigNumberish | null): EventFilter;

    Show(proposalId: BigNumberish | null): EventFilter;
  };

  estimateGas: {
    hiding(
      proposalId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "hiding(uint256)"(
      proposalId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    show(proposalId: BigNumberish, overrides?: Overrides): Promise<BigNumber>;

    "show(uint256)"(
      proposalId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    hide(proposalId: BigNumberish, overrides?: Overrides): Promise<BigNumber>;

    "hide(uint256)"(
      proposalId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    hiding(
      proposalId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "hiding(uint256)"(
      proposalId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    show(
      proposalId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "show(uint256)"(
      proposalId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    hide(
      proposalId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "hide(uint256)"(
      proposalId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
