/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface MetaversesInterface extends ethers.utils.Interface {
  functions: {
    "unban(uint256)": FunctionFragment;
    "joinOnlyKlubsMembership(uint256)": FunctionFragment;
    "managerMetaverses(address,uint256)": FunctionFragment;
    "itemProposalCount()": FunctionFragment;
    "setExtra(uint256,string)": FunctionFragment;
    "addManager(uint256,address)": FunctionFragment;
    "addMetaverse(string)": FunctionFragment;
    "itemProposals(uint256)": FunctionFragment;
    "mileageOff(uint256)": FunctionFragment;
    "setItemTotalSupply(uint256,address,uint256)": FunctionFragment;
    "metaverseCount()": FunctionFragment;
    "itemTypes(uint256,address)": FunctionFragment;
    "removeProposal(uint256)": FunctionFragment;
    "updateItemType(uint256,address,uint8)": FunctionFragment;
    "onlyKlubsMembership(uint256)": FunctionFragment;
    "extras(uint256)": FunctionFragment;
    "removeManager(uint256,address)": FunctionFragment;
    "proposeItem(uint256,address,uint8)": FunctionFragment;
    "ban(uint256)": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "itemEnumerables(uint256,address)": FunctionFragment;
    "setRoyalty(uint256,address,uint256)": FunctionFragment;
    "royalties(uint256)": FunctionFragment;
    "managerMetaversesCount(address)": FunctionFragment;
    "managersIndex(uint256,address)": FunctionFragment;
    "owner()": FunctionFragment;
    "isOwner()": FunctionFragment;
    "itemAddedBlocks(uint256,address)": FunctionFragment;
    "itemTotalSupplies(uint256,address)": FunctionFragment;
    "managerCount(uint256)": FunctionFragment;
    "setItemEnumerable(uint256,address,bool)": FunctionFragment;
    "mileageMode(uint256)": FunctionFragment;
    "existsManager(uint256,address)": FunctionFragment;
    "itemAddrCount(uint256)": FunctionFragment;
    "itemAdded(uint256,address)": FunctionFragment;
    "setItemExtra(uint256,address,string)": FunctionFragment;
    "itemExtras(uint256,address)": FunctionFragment;
    "passProposal(uint256,string)": FunctionFragment;
    "managerMetaversesIndex(address,uint256)": FunctionFragment;
    "itemAddrs(uint256,uint256)": FunctionFragment;
    "banned(uint256)": FunctionFragment;
    "addItem(uint256,address,uint8,string)": FunctionFragment;
    "managers(uint256,uint256)": FunctionFragment;
    "mileageOn(uint256)": FunctionFragment;
    "getItemTotalSupply(uint256,address)": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
    "exitOnlyKlubsMembership(uint256)": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "unban", values: [BigNumberish]): string;
  encodeFunctionData(
    functionFragment: "joinOnlyKlubsMembership",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "managerMetaverses",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "itemProposalCount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setExtra",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "addManager",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "addMetaverse",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "itemProposals",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "mileageOff",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setItemTotalSupply",
    values: [BigNumberish, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "metaverseCount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "itemTypes",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "removeProposal",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "updateItemType",
    values: [BigNumberish, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "onlyKlubsMembership",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "extras",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "removeManager",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "proposeItem",
    values: [BigNumberish, string, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "ban", values: [BigNumberish]): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "itemEnumerables",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "setRoyalty",
    values: [BigNumberish, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "royalties",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "managerMetaversesCount",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "managersIndex",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(functionFragment: "isOwner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "itemAddedBlocks",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "itemTotalSupplies",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "managerCount",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setItemEnumerable",
    values: [BigNumberish, string, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "mileageMode",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "existsManager",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "itemAddrCount",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "itemAdded",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "setItemExtra",
    values: [BigNumberish, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "itemExtras",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "passProposal",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "managerMetaversesIndex",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "itemAddrs",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "banned",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "addItem",
    values: [BigNumberish, string, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "managers",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "mileageOn",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getItemTotalSupply",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "exitOnlyKlubsMembership",
    values: [BigNumberish]
  ): string;

  decodeFunctionResult(functionFragment: "unban", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "joinOnlyKlubsMembership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "managerMetaverses",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "itemProposalCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setExtra", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "addManager", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "addMetaverse",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "itemProposals",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "mileageOff", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setItemTotalSupply",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "metaverseCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "itemTypes", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "removeProposal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateItemType",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onlyKlubsMembership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "extras", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "removeManager",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "proposeItem",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "ban", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "itemEnumerables",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setRoyalty", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "royalties", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "managerMetaversesCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "managersIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "isOwner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "itemAddedBlocks",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "itemTotalSupplies",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "managerCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setItemEnumerable",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "mileageMode",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "existsManager",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "itemAddrCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "itemAdded", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setItemExtra",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "itemExtras", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "passProposal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "managerMetaversesIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "itemAddrs", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "banned", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "addItem", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "managers", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "mileageOn", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getItemTotalSupply",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "exitOnlyKlubsMembership",
    data: BytesLike
  ): Result;

  events: {
    "Add(address)": EventFragment;
    "AddManager(uint256,address)": EventFragment;
    "RemoveManager(uint256,address)": EventFragment;
    "SetExtra(uint256,string)": EventFragment;
    "SetRoyalty(uint256,address,uint256)": EventFragment;
    "JoinOnlyKlubsMembership(uint256)": EventFragment;
    "ExitOnlyKlubsMembership(uint256)": EventFragment;
    "MileageOn(uint256)": EventFragment;
    "MileageOff(uint256)": EventFragment;
    "Ban(uint256)": EventFragment;
    "Unban(uint256)": EventFragment;
    "ProposeItem(uint256,address,uint8,address)": EventFragment;
    "AddItem(uint256,address,uint8)": EventFragment;
    "SetItemEnumerable(uint256,address,bool)": EventFragment;
    "SetItemTotalSupply(uint256,address,uint256)": EventFragment;
    "SetItemExtra(uint256,address,string)": EventFragment;
    "OwnershipTransferred(address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Add"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AddManager"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RemoveManager"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetExtra"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetRoyalty"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "JoinOnlyKlubsMembership"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ExitOnlyKlubsMembership"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "MileageOn"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "MileageOff"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Ban"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Unban"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ProposeItem"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AddItem"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetItemEnumerable"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetItemTotalSupply"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetItemExtra"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
}

export class Metaverses extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: MetaversesInterface;

  functions: {
    unban(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "unban(uint256)"(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    joinOnlyKlubsMembership(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "joinOnlyKlubsMembership(uint256)"(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    managerMetaverses(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "managerMetaverses(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    itemProposalCount(overrides?: CallOverrides): Promise<[BigNumber]>;

    "itemProposalCount()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    setExtra(
      id: BigNumberish,
      extra: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setExtra(uint256,string)"(
      id: BigNumberish,
      extra: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    addManager(
      id: BigNumberish,
      manager: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "addManager(uint256,address)"(
      id: BigNumberish,
      manager: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    addMetaverse(
      extra: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "addMetaverse(string)"(
      extra: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    itemProposals(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, string, number, string] & {
        id: BigNumber;
        item: string;
        itemType: number;
        proposer: string;
      }
    >;

    "itemProposals(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, string, number, string] & {
        id: BigNumber;
        item: string;
        itemType: number;
        proposer: string;
      }
    >;

    mileageOff(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "mileageOff(uint256)"(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setItemTotalSupply(
      id: BigNumberish,
      item: string,
      totalSupply: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setItemTotalSupply(uint256,address,uint256)"(
      id: BigNumberish,
      item: string,
      totalSupply: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    metaverseCount(overrides?: CallOverrides): Promise<[BigNumber]>;

    "metaverseCount()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    itemTypes(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<[number]>;

    "itemTypes(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<[number]>;

    removeProposal(
      proposalId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "removeProposal(uint256)"(
      proposalId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    updateItemType(
      id: BigNumberish,
      item: string,
      itemType: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "updateItemType(uint256,address,uint8)"(
      id: BigNumberish,
      item: string,
      itemType: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    onlyKlubsMembership(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "onlyKlubsMembership(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    extras(arg0: BigNumberish, overrides?: CallOverrides): Promise<[string]>;

    "extras(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    removeManager(
      id: BigNumberish,
      manager: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "removeManager(uint256,address)"(
      id: BigNumberish,
      manager: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    proposeItem(
      id: BigNumberish,
      item: string,
      itemType: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "proposeItem(uint256,address,uint8)"(
      id: BigNumberish,
      item: string,
      itemType: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    ban(id: BigNumberish, overrides?: Overrides): Promise<ContractTransaction>;

    "ban(uint256)"(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    renounceOwnership(overrides?: Overrides): Promise<ContractTransaction>;

    "renounceOwnership()"(overrides?: Overrides): Promise<ContractTransaction>;

    itemEnumerables(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "itemEnumerables(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    setRoyalty(
      id: BigNumberish,
      receiver: string,
      royalty: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setRoyalty(uint256,address,uint256)"(
      id: BigNumberish,
      receiver: string,
      royalty: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    royalties(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber] & { receiver: string; royalty: BigNumber }>;

    "royalties(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber] & { receiver: string; royalty: BigNumber }>;

    managerMetaversesCount(
      manager: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "managerMetaversesCount(address)"(
      manager: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    managersIndex(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "managersIndex(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    "owner()"(overrides?: CallOverrides): Promise<[string]>;

    isOwner(overrides?: CallOverrides): Promise<[boolean]>;

    "isOwner()"(overrides?: CallOverrides): Promise<[boolean]>;

    itemAddedBlocks(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "itemAddedBlocks(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    itemTotalSupplies(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "itemTotalSupplies(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    managerCount(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "managerCount(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    setItemEnumerable(
      id: BigNumberish,
      item: string,
      enumerable: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setItemEnumerable(uint256,address,bool)"(
      id: BigNumberish,
      item: string,
      enumerable: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    mileageMode(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "mileageMode(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    existsManager(
      id: BigNumberish,
      manager: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "existsManager(uint256,address)"(
      id: BigNumberish,
      manager: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    itemAddrCount(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "itemAddrCount(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    itemAdded(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "itemAdded(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    setItemExtra(
      id: BigNumberish,
      item: string,
      extra: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setItemExtra(uint256,address,string)"(
      id: BigNumberish,
      item: string,
      extra: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    itemExtras(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "itemExtras(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    passProposal(
      proposalId: BigNumberish,
      extra: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "passProposal(uint256,string)"(
      proposalId: BigNumberish,
      extra: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    managerMetaversesIndex(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "managerMetaversesIndex(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    itemAddrs(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "itemAddrs(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    banned(arg0: BigNumberish, overrides?: CallOverrides): Promise<[boolean]>;

    "banned(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    addItem(
      id: BigNumberish,
      item: string,
      itemType: BigNumberish,
      extra: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "addItem(uint256,address,uint8,string)"(
      id: BigNumberish,
      item: string,
      itemType: BigNumberish,
      extra: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    managers(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "managers(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    mileageOn(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "mileageOn(uint256)"(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getItemTotalSupply(
      id: BigNumberish,
      item: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getItemTotalSupply(uint256,address)"(
      id: BigNumberish,
      item: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    exitOnlyKlubsMembership(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "exitOnlyKlubsMembership(uint256)"(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  unban(id: BigNumberish, overrides?: Overrides): Promise<ContractTransaction>;

  "unban(uint256)"(
    id: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  joinOnlyKlubsMembership(
    id: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "joinOnlyKlubsMembership(uint256)"(
    id: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  managerMetaverses(
    arg0: string,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "managerMetaverses(address,uint256)"(
    arg0: string,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  itemProposalCount(overrides?: CallOverrides): Promise<BigNumber>;

  "itemProposalCount()"(overrides?: CallOverrides): Promise<BigNumber>;

  setExtra(
    id: BigNumberish,
    extra: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setExtra(uint256,string)"(
    id: BigNumberish,
    extra: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  addManager(
    id: BigNumberish,
    manager: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "addManager(uint256,address)"(
    id: BigNumberish,
    manager: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  addMetaverse(
    extra: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "addMetaverse(string)"(
    extra: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  itemProposals(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, string, number, string] & {
      id: BigNumber;
      item: string;
      itemType: number;
      proposer: string;
    }
  >;

  "itemProposals(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, string, number, string] & {
      id: BigNumber;
      item: string;
      itemType: number;
      proposer: string;
    }
  >;

  mileageOff(
    id: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "mileageOff(uint256)"(
    id: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setItemTotalSupply(
    id: BigNumberish,
    item: string,
    totalSupply: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setItemTotalSupply(uint256,address,uint256)"(
    id: BigNumberish,
    item: string,
    totalSupply: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  metaverseCount(overrides?: CallOverrides): Promise<BigNumber>;

  "metaverseCount()"(overrides?: CallOverrides): Promise<BigNumber>;

  itemTypes(
    arg0: BigNumberish,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<number>;

  "itemTypes(uint256,address)"(
    arg0: BigNumberish,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<number>;

  removeProposal(
    proposalId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "removeProposal(uint256)"(
    proposalId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  updateItemType(
    id: BigNumberish,
    item: string,
    itemType: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "updateItemType(uint256,address,uint8)"(
    id: BigNumberish,
    item: string,
    itemType: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  onlyKlubsMembership(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "onlyKlubsMembership(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  extras(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

  "extras(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  removeManager(
    id: BigNumberish,
    manager: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "removeManager(uint256,address)"(
    id: BigNumberish,
    manager: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  proposeItem(
    id: BigNumberish,
    item: string,
    itemType: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "proposeItem(uint256,address,uint8)"(
    id: BigNumberish,
    item: string,
    itemType: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  ban(id: BigNumberish, overrides?: Overrides): Promise<ContractTransaction>;

  "ban(uint256)"(
    id: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  renounceOwnership(overrides?: Overrides): Promise<ContractTransaction>;

  "renounceOwnership()"(overrides?: Overrides): Promise<ContractTransaction>;

  itemEnumerables(
    arg0: BigNumberish,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "itemEnumerables(uint256,address)"(
    arg0: BigNumberish,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  setRoyalty(
    id: BigNumberish,
    receiver: string,
    royalty: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setRoyalty(uint256,address,uint256)"(
    id: BigNumberish,
    receiver: string,
    royalty: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  royalties(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[string, BigNumber] & { receiver: string; royalty: BigNumber }>;

  "royalties(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[string, BigNumber] & { receiver: string; royalty: BigNumber }>;

  managerMetaversesCount(
    manager: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "managerMetaversesCount(address)"(
    manager: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  managersIndex(
    arg0: BigNumberish,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "managersIndex(uint256,address)"(
    arg0: BigNumberish,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  owner(overrides?: CallOverrides): Promise<string>;

  "owner()"(overrides?: CallOverrides): Promise<string>;

  isOwner(overrides?: CallOverrides): Promise<boolean>;

  "isOwner()"(overrides?: CallOverrides): Promise<boolean>;

  itemAddedBlocks(
    arg0: BigNumberish,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "itemAddedBlocks(uint256,address)"(
    arg0: BigNumberish,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  itemTotalSupplies(
    arg0: BigNumberish,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "itemTotalSupplies(uint256,address)"(
    arg0: BigNumberish,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  managerCount(id: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

  "managerCount(uint256)"(
    id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  setItemEnumerable(
    id: BigNumberish,
    item: string,
    enumerable: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setItemEnumerable(uint256,address,bool)"(
    id: BigNumberish,
    item: string,
    enumerable: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  mileageMode(arg0: BigNumberish, overrides?: CallOverrides): Promise<boolean>;

  "mileageMode(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  existsManager(
    id: BigNumberish,
    manager: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "existsManager(uint256,address)"(
    id: BigNumberish,
    manager: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  itemAddrCount(
    id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "itemAddrCount(uint256)"(
    id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  itemAdded(
    arg0: BigNumberish,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "itemAdded(uint256,address)"(
    arg0: BigNumberish,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  setItemExtra(
    id: BigNumberish,
    item: string,
    extra: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setItemExtra(uint256,address,string)"(
    id: BigNumberish,
    item: string,
    extra: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  itemExtras(
    arg0: BigNumberish,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<string>;

  "itemExtras(uint256,address)"(
    arg0: BigNumberish,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<string>;

  passProposal(
    proposalId: BigNumberish,
    extra: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "passProposal(uint256,string)"(
    proposalId: BigNumberish,
    extra: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  managerMetaversesIndex(
    arg0: string,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "managerMetaversesIndex(address,uint256)"(
    arg0: string,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  itemAddrs(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "itemAddrs(uint256,uint256)"(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  banned(arg0: BigNumberish, overrides?: CallOverrides): Promise<boolean>;

  "banned(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  addItem(
    id: BigNumberish,
    item: string,
    itemType: BigNumberish,
    extra: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "addItem(uint256,address,uint8,string)"(
    id: BigNumberish,
    item: string,
    itemType: BigNumberish,
    extra: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  managers(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "managers(uint256,uint256)"(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  mileageOn(
    id: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "mileageOn(uint256)"(
    id: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getItemTotalSupply(
    id: BigNumberish,
    item: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getItemTotalSupply(uint256,address)"(
    id: BigNumberish,
    item: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferOwnership(address)"(
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  exitOnlyKlubsMembership(
    id: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "exitOnlyKlubsMembership(uint256)"(
    id: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    unban(id: BigNumberish, overrides?: CallOverrides): Promise<void>;

    "unban(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    joinOnlyKlubsMembership(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "joinOnlyKlubsMembership(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    managerMetaverses(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "managerMetaverses(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    itemProposalCount(overrides?: CallOverrides): Promise<BigNumber>;

    "itemProposalCount()"(overrides?: CallOverrides): Promise<BigNumber>;

    setExtra(
      id: BigNumberish,
      extra: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setExtra(uint256,string)"(
      id: BigNumberish,
      extra: string,
      overrides?: CallOverrides
    ): Promise<void>;

    addManager(
      id: BigNumberish,
      manager: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "addManager(uint256,address)"(
      id: BigNumberish,
      manager: string,
      overrides?: CallOverrides
    ): Promise<void>;

    addMetaverse(extra: string, overrides?: CallOverrides): Promise<void>;

    "addMetaverse(string)"(
      extra: string,
      overrides?: CallOverrides
    ): Promise<void>;

    itemProposals(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, string, number, string] & {
        id: BigNumber;
        item: string;
        itemType: number;
        proposer: string;
      }
    >;

    "itemProposals(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, string, number, string] & {
        id: BigNumber;
        item: string;
        itemType: number;
        proposer: string;
      }
    >;

    mileageOff(id: BigNumberish, overrides?: CallOverrides): Promise<void>;

    "mileageOff(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setItemTotalSupply(
      id: BigNumberish,
      item: string,
      totalSupply: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setItemTotalSupply(uint256,address,uint256)"(
      id: BigNumberish,
      item: string,
      totalSupply: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    metaverseCount(overrides?: CallOverrides): Promise<BigNumber>;

    "metaverseCount()"(overrides?: CallOverrides): Promise<BigNumber>;

    itemTypes(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<number>;

    "itemTypes(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<number>;

    removeProposal(
      proposalId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "removeProposal(uint256)"(
      proposalId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    updateItemType(
      id: BigNumberish,
      item: string,
      itemType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "updateItemType(uint256,address,uint8)"(
      id: BigNumberish,
      item: string,
      itemType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    onlyKlubsMembership(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "onlyKlubsMembership(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    extras(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

    "extras(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    removeManager(
      id: BigNumberish,
      manager: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "removeManager(uint256,address)"(
      id: BigNumberish,
      manager: string,
      overrides?: CallOverrides
    ): Promise<void>;

    proposeItem(
      id: BigNumberish,
      item: string,
      itemType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "proposeItem(uint256,address,uint8)"(
      id: BigNumberish,
      item: string,
      itemType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    ban(id: BigNumberish, overrides?: CallOverrides): Promise<void>;

    "ban(uint256)"(id: BigNumberish, overrides?: CallOverrides): Promise<void>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    "renounceOwnership()"(overrides?: CallOverrides): Promise<void>;

    itemEnumerables(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "itemEnumerables(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    setRoyalty(
      id: BigNumberish,
      receiver: string,
      royalty: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setRoyalty(uint256,address,uint256)"(
      id: BigNumberish,
      receiver: string,
      royalty: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    royalties(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber] & { receiver: string; royalty: BigNumber }>;

    "royalties(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber] & { receiver: string; royalty: BigNumber }>;

    managerMetaversesCount(
      manager: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "managerMetaversesCount(address)"(
      manager: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    managersIndex(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "managersIndex(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<string>;

    "owner()"(overrides?: CallOverrides): Promise<string>;

    isOwner(overrides?: CallOverrides): Promise<boolean>;

    "isOwner()"(overrides?: CallOverrides): Promise<boolean>;

    itemAddedBlocks(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "itemAddedBlocks(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    itemTotalSupplies(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "itemTotalSupplies(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    managerCount(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "managerCount(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setItemEnumerable(
      id: BigNumberish,
      item: string,
      enumerable: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    "setItemEnumerable(uint256,address,bool)"(
      id: BigNumberish,
      item: string,
      enumerable: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    mileageMode(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "mileageMode(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    existsManager(
      id: BigNumberish,
      manager: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "existsManager(uint256,address)"(
      id: BigNumberish,
      manager: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    itemAddrCount(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "itemAddrCount(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    itemAdded(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "itemAdded(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    setItemExtra(
      id: BigNumberish,
      item: string,
      extra: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setItemExtra(uint256,address,string)"(
      id: BigNumberish,
      item: string,
      extra: string,
      overrides?: CallOverrides
    ): Promise<void>;

    itemExtras(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<string>;

    "itemExtras(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<string>;

    passProposal(
      proposalId: BigNumberish,
      extra: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "passProposal(uint256,string)"(
      proposalId: BigNumberish,
      extra: string,
      overrides?: CallOverrides
    ): Promise<void>;

    managerMetaversesIndex(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "managerMetaversesIndex(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    itemAddrs(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "itemAddrs(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    banned(arg0: BigNumberish, overrides?: CallOverrides): Promise<boolean>;

    "banned(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    addItem(
      id: BigNumberish,
      item: string,
      itemType: BigNumberish,
      extra: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "addItem(uint256,address,uint8,string)"(
      id: BigNumberish,
      item: string,
      itemType: BigNumberish,
      extra: string,
      overrides?: CallOverrides
    ): Promise<void>;

    managers(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "managers(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    mileageOn(id: BigNumberish, overrides?: CallOverrides): Promise<void>;

    "mileageOn(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    getItemTotalSupply(
      id: BigNumberish,
      item: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getItemTotalSupply(uint256,address)"(
      id: BigNumberish,
      item: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    exitOnlyKlubsMembership(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "exitOnlyKlubsMembership(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    Add(manager: string | null): EventFilter;

    AddManager(id: BigNumberish | null, manager: string | null): EventFilter;

    RemoveManager(id: BigNumberish | null, manager: string | null): EventFilter;

    SetExtra(id: BigNumberish | null, extra: null): EventFilter;

    SetRoyalty(
      id: BigNumberish | null,
      receiver: null,
      royalty: null
    ): EventFilter;

    JoinOnlyKlubsMembership(id: BigNumberish | null): EventFilter;

    ExitOnlyKlubsMembership(id: BigNumberish | null): EventFilter;

    MileageOn(id: BigNumberish | null): EventFilter;

    MileageOff(id: BigNumberish | null): EventFilter;

    Ban(id: BigNumberish | null): EventFilter;

    Unban(id: BigNumberish | null): EventFilter;

    ProposeItem(
      id: BigNumberish | null,
      item: string | null,
      itemType: null,
      proposer: string | null
    ): EventFilter;

    AddItem(
      id: BigNumberish | null,
      item: string | null,
      itemType: null
    ): EventFilter;

    SetItemEnumerable(
      id: BigNumberish | null,
      item: string | null,
      enumerable: null
    ): EventFilter;

    SetItemTotalSupply(
      id: BigNumberish | null,
      item: string | null,
      totalSupply: null
    ): EventFilter;

    SetItemExtra(
      id: BigNumberish | null,
      item: string | null,
      extra: null
    ): EventFilter;

    OwnershipTransferred(
      previousOwner: string | null,
      newOwner: string | null
    ): EventFilter;
  };

  estimateGas: {
    unban(id: BigNumberish, overrides?: Overrides): Promise<BigNumber>;

    "unban(uint256)"(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    joinOnlyKlubsMembership(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "joinOnlyKlubsMembership(uint256)"(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    managerMetaverses(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "managerMetaverses(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    itemProposalCount(overrides?: CallOverrides): Promise<BigNumber>;

    "itemProposalCount()"(overrides?: CallOverrides): Promise<BigNumber>;

    setExtra(
      id: BigNumberish,
      extra: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setExtra(uint256,string)"(
      id: BigNumberish,
      extra: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    addManager(
      id: BigNumberish,
      manager: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "addManager(uint256,address)"(
      id: BigNumberish,
      manager: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    addMetaverse(extra: string, overrides?: Overrides): Promise<BigNumber>;

    "addMetaverse(string)"(
      extra: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    itemProposals(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "itemProposals(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    mileageOff(id: BigNumberish, overrides?: Overrides): Promise<BigNumber>;

    "mileageOff(uint256)"(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setItemTotalSupply(
      id: BigNumberish,
      item: string,
      totalSupply: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setItemTotalSupply(uint256,address,uint256)"(
      id: BigNumberish,
      item: string,
      totalSupply: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    metaverseCount(overrides?: CallOverrides): Promise<BigNumber>;

    "metaverseCount()"(overrides?: CallOverrides): Promise<BigNumber>;

    itemTypes(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "itemTypes(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    removeProposal(
      proposalId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "removeProposal(uint256)"(
      proposalId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    updateItemType(
      id: BigNumberish,
      item: string,
      itemType: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "updateItemType(uint256,address,uint8)"(
      id: BigNumberish,
      item: string,
      itemType: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    onlyKlubsMembership(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "onlyKlubsMembership(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    extras(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    "extras(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    removeManager(
      id: BigNumberish,
      manager: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "removeManager(uint256,address)"(
      id: BigNumberish,
      manager: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    proposeItem(
      id: BigNumberish,
      item: string,
      itemType: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "proposeItem(uint256,address,uint8)"(
      id: BigNumberish,
      item: string,
      itemType: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    ban(id: BigNumberish, overrides?: Overrides): Promise<BigNumber>;

    "ban(uint256)"(id: BigNumberish, overrides?: Overrides): Promise<BigNumber>;

    renounceOwnership(overrides?: Overrides): Promise<BigNumber>;

    "renounceOwnership()"(overrides?: Overrides): Promise<BigNumber>;

    itemEnumerables(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "itemEnumerables(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setRoyalty(
      id: BigNumberish,
      receiver: string,
      royalty: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setRoyalty(uint256,address,uint256)"(
      id: BigNumberish,
      receiver: string,
      royalty: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    royalties(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "royalties(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    managerMetaversesCount(
      manager: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "managerMetaversesCount(address)"(
      manager: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    managersIndex(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "managersIndex(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    "owner()"(overrides?: CallOverrides): Promise<BigNumber>;

    isOwner(overrides?: CallOverrides): Promise<BigNumber>;

    "isOwner()"(overrides?: CallOverrides): Promise<BigNumber>;

    itemAddedBlocks(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "itemAddedBlocks(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    itemTotalSupplies(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "itemTotalSupplies(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    managerCount(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "managerCount(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setItemEnumerable(
      id: BigNumberish,
      item: string,
      enumerable: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setItemEnumerable(uint256,address,bool)"(
      id: BigNumberish,
      item: string,
      enumerable: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    mileageMode(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "mileageMode(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    existsManager(
      id: BigNumberish,
      manager: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "existsManager(uint256,address)"(
      id: BigNumberish,
      manager: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    itemAddrCount(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "itemAddrCount(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    itemAdded(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "itemAdded(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setItemExtra(
      id: BigNumberish,
      item: string,
      extra: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setItemExtra(uint256,address,string)"(
      id: BigNumberish,
      item: string,
      extra: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    itemExtras(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "itemExtras(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    passProposal(
      proposalId: BigNumberish,
      extra: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "passProposal(uint256,string)"(
      proposalId: BigNumberish,
      extra: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    managerMetaversesIndex(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "managerMetaversesIndex(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    itemAddrs(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "itemAddrs(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    banned(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    "banned(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    addItem(
      id: BigNumberish,
      item: string,
      itemType: BigNumberish,
      extra: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "addItem(uint256,address,uint8,string)"(
      id: BigNumberish,
      item: string,
      itemType: BigNumberish,
      extra: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    managers(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "managers(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    mileageOn(id: BigNumberish, overrides?: Overrides): Promise<BigNumber>;

    "mileageOn(uint256)"(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    getItemTotalSupply(
      id: BigNumberish,
      item: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getItemTotalSupply(uint256,address)"(
      id: BigNumberish,
      item: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    exitOnlyKlubsMembership(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "exitOnlyKlubsMembership(uint256)"(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    unban(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "unban(uint256)"(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    joinOnlyKlubsMembership(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "joinOnlyKlubsMembership(uint256)"(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    managerMetaverses(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "managerMetaverses(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    itemProposalCount(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "itemProposalCount()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setExtra(
      id: BigNumberish,
      extra: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setExtra(uint256,string)"(
      id: BigNumberish,
      extra: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    addManager(
      id: BigNumberish,
      manager: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "addManager(uint256,address)"(
      id: BigNumberish,
      manager: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    addMetaverse(
      extra: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "addMetaverse(string)"(
      extra: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    itemProposals(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "itemProposals(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    mileageOff(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "mileageOff(uint256)"(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setItemTotalSupply(
      id: BigNumberish,
      item: string,
      totalSupply: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setItemTotalSupply(uint256,address,uint256)"(
      id: BigNumberish,
      item: string,
      totalSupply: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    metaverseCount(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "metaverseCount()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    itemTypes(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "itemTypes(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    removeProposal(
      proposalId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "removeProposal(uint256)"(
      proposalId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    updateItemType(
      id: BigNumberish,
      item: string,
      itemType: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "updateItemType(uint256,address,uint8)"(
      id: BigNumberish,
      item: string,
      itemType: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    onlyKlubsMembership(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "onlyKlubsMembership(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    extras(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "extras(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    removeManager(
      id: BigNumberish,
      manager: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "removeManager(uint256,address)"(
      id: BigNumberish,
      manager: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    proposeItem(
      id: BigNumberish,
      item: string,
      itemType: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "proposeItem(uint256,address,uint8)"(
      id: BigNumberish,
      item: string,
      itemType: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    ban(id: BigNumberish, overrides?: Overrides): Promise<PopulatedTransaction>;

    "ban(uint256)"(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    renounceOwnership(overrides?: Overrides): Promise<PopulatedTransaction>;

    "renounceOwnership()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    itemEnumerables(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "itemEnumerables(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setRoyalty(
      id: BigNumberish,
      receiver: string,
      royalty: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setRoyalty(uint256,address,uint256)"(
      id: BigNumberish,
      receiver: string,
      royalty: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    royalties(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "royalties(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    managerMetaversesCount(
      manager: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "managerMetaversesCount(address)"(
      manager: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    managersIndex(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "managersIndex(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    isOwner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "isOwner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    itemAddedBlocks(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "itemAddedBlocks(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    itemTotalSupplies(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "itemTotalSupplies(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    managerCount(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "managerCount(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setItemEnumerable(
      id: BigNumberish,
      item: string,
      enumerable: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setItemEnumerable(uint256,address,bool)"(
      id: BigNumberish,
      item: string,
      enumerable: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    mileageMode(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "mileageMode(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    existsManager(
      id: BigNumberish,
      manager: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "existsManager(uint256,address)"(
      id: BigNumberish,
      manager: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    itemAddrCount(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "itemAddrCount(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    itemAdded(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "itemAdded(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setItemExtra(
      id: BigNumberish,
      item: string,
      extra: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setItemExtra(uint256,address,string)"(
      id: BigNumberish,
      item: string,
      extra: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    itemExtras(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "itemExtras(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    passProposal(
      proposalId: BigNumberish,
      extra: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "passProposal(uint256,string)"(
      proposalId: BigNumberish,
      extra: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    managerMetaversesIndex(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "managerMetaversesIndex(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    itemAddrs(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "itemAddrs(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    banned(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "banned(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    addItem(
      id: BigNumberish,
      item: string,
      itemType: BigNumberish,
      extra: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "addItem(uint256,address,uint8,string)"(
      id: BigNumberish,
      item: string,
      itemType: BigNumberish,
      extra: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    managers(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "managers(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    mileageOn(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "mileageOn(uint256)"(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getItemTotalSupply(
      id: BigNumberish,
      item: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getItemTotalSupply(uint256,address)"(
      id: BigNumberish,
      item: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    exitOnlyKlubsMembership(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "exitOnlyKlubsMembership(uint256)"(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
